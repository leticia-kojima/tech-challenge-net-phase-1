version: 0.2

phases:
  install:
    commands:
      - echo "Removendo global.json para evitar conflito de SDK"
      - rm -f /codebuild/global.json || true
      - echo "Baixando script de instalação do .NET"
      - curl -sSL https://dot.net/v1/dotnet-install.sh -o dotnet-install.sh
      - chmod +x dotnet-install.sh
      - echo "Instalando .NET SDK 9.0.302"
      - ./dotnet-install.sh --version 9.0.302 --install-dir /root/dotnet
      - echo "Instalando .NET Runtime 9.0"
      - echo "BRANCH CI/CD"
      - ./dotnet-install.sh --version 9.0.0 --runtime dotnet --install-dir /root/dotnet
      - export PATH=/root/dotnet:$PATH
      - dotnet --version
      - export PATH="$PATH:/root/.dotnet/tools"
      - echo "Instalando Docker (caso esteja em ambiente customizado)"
      - nohup /usr/local/bin/dockerd-entrypoint.sh &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
      - echo "Docker disponível"

  pre_build:
    commands:
      - export PATH=/root/dotnet:$PATH:/root/.dotnet/tools
      - echo "Restaurando dependências"
      - dotnet restore
      - echo "Autenticando com ECR"
      - $(aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 120479167729.dkr.ecr.us-east-2.amazonaws.com)
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)

  build:
    commands:
      - export PATH=/root/dotnet:$PATH:/root/.dotnet/tools
      - echo "Construindo solução"
      - dotnet build --no-restore --configuration Release
      - echo "Executando testes"
      - dotnet test --configuration Release --no-restore --logger trx --results-directory TestResults /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --collect:"XPlat Code Coverage"
      - echo "Construindo imagem Docker"
      - docker build -t fcg:$IMAGE_TAG -f src/FCG.API/Dockerfile .
      - docker tag fcg:$IMAGE_TAG 120479167729.dkr.ecr.us-east-2.amazonaws.com/ecr/fcg:$IMAGE_TAG

  post_build:
    commands:
      - echo "Subindo imagem para o ECR"
      - docker push 120479167729.dkr.ecr.us-east-2.amazonaws.com/ecr/fcg:$IMAGE_TAG
      - echo "Build e push concluídos com sucesso."

artifacts:
  files:
    - '*/.trx'
    - 'Report/*/'